{"version":3,"sources":["wallet-connect-a9101a29-js-es5.js","webpack:///node_modules/bnc-onboard/dist/esm/wallet-connect-a9101a29.js"],"names":[],"mappings":"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","file":"x","sourcesContent":["(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[\"wallet-connect-a9101a29-js\"],{\n\n/***/ \"./node_modules/bnc-onboard/dist/esm/wallet-connect-a9101a29.js\":\n/*!**********************************************************************!*\\\n  !*** ./node_modules/bnc-onboard/dist/esm/wallet-connect-a9101a29.js ***!\n  \\**********************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _validation_9ad8443b_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validation-9ad8443b.js */ \"./node_modules/bnc-onboard/dist/esm/validation-9ad8443b.js\");\n\nvar walletConnectIcon = \"\\n  <svg \\n    height=\\\"25\\\" \\n    viewBox=\\\"0 0 40 25\\\" \\n    width=\\\"40\\\" \\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n  >\\n  <path d=\\\"m8.19180572 4.83416816c6.52149658-6.38508884 17.09493158-6.38508884 23.61642788 0l.7848727.76845565c.3260748.31925442.3260748.83686816 0 1.15612272l-2.6848927 2.62873374c-.1630375.15962734-.4273733.15962734-.5904108 0l-1.0800779-1.05748639c-4.5495589-4.45439756-11.9258514-4.45439756-16.4754105 0l-1.1566741 1.13248068c-.1630376.15962721-.4273735.15962721-.5904108 0l-2.68489263-2.62873375c-.32607483-.31925456-.32607483-.83686829 0-1.15612272zm29.16903948 5.43649934 2.3895596 2.3395862c.3260732.319253.3260751.8368636.0000041 1.1561187l-10.7746894 10.5494845c-.3260726.3192568-.8547443.3192604-1.1808214.0000083-.0000013-.0000013-.0000029-.0000029-.0000042-.0000043l-7.6472191-7.4872762c-.0815187-.0798136-.2136867-.0798136-.2952053 0-.0000006.0000005-.000001.000001-.0000015.0000014l-7.6470562 7.4872708c-.3260715.3192576-.8547434.319263-1.1808215.0000116-.0000019-.0000018-.0000039-.0000037-.0000059-.0000058l-10.7749893-10.5496247c-.32607469-.3192544-.32607469-.8368682 0-1.1561226l2.38956395-2.3395823c.3260747-.31925446.85474652-.31925446 1.18082136 0l7.64733029 7.4873809c.0815188.0798136.2136866.0798136.2952054 0 .0000012-.0000012.0000023-.0000023.0000035-.0000032l7.6469471-7.4873777c.3260673-.31926181.8547392-.31927378 1.1808214-.0000267.0000046.0000045.0000091.000009.0000135.0000135l7.6473203 7.4873909c.0815186.0798135.2136866.0798135.2952053 0l7.6471967-7.4872433c.3260748-.31925458.8547465-.31925458 1.1808213 0z\\\" \\n        fill=\\\"#3b99fc\\\"/>\\n  </svg>\\n\";\n\nfunction walletConnect(options) {\n  Object(_validation_9ad8443b_js__WEBPACK_IMPORTED_MODULE_0__[\"v\"])({\n    name: 'WalletConnect Options',\n    value: options,\n    type: 'object'\n  });\n  var infuraKey = options.infuraKey,\n      preferred = options.preferred;\n  Object(_validation_9ad8443b_js__WEBPACK_IMPORTED_MODULE_0__[\"v\"])({\n    name: 'infuraKey',\n    value: infuraKey,\n    type: 'string'\n  });\n  Object(_validation_9ad8443b_js__WEBPACK_IMPORTED_MODULE_0__[\"v\"])({\n    name: 'preferred',\n    value: preferred,\n    type: 'boolean',\n    optional: true\n  });\n  var provider;\n  return {\n    name: 'WalletConnect',\n    svg: walletConnectIcon,\n    wallet: function wallet() {\n      var _ref, WalletConnectProvider, _provider;\n\n      return regeneratorRuntime.async(function wallet$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return regeneratorRuntime.awrap(__webpack_require__.e(/*! import() | walletconnect-web3-provider */ \"walletconnect-web3-provider\").then(__webpack_require__.t.bind(null, /*! @walletconnect/web3-provider */ \"./node_modules/@walletconnect/web3-provider/lib/index.js\", 7)));\n\n            case 2:\n              _ref = _context.sent;\n              WalletConnectProvider = _ref[\"default\"];\n              _provider = new WalletConnectProvider({\n                infuraId: infuraKey\n              });\n              _provider.autoRefreshOnNetworkChange = false;\n              return _context.abrupt(\"return\", {\n                provider: provider,\n                \"interface\": {\n                  name: 'WalletConnect',\n                  connect: function connect() {\n                    return new Promise(function (resolve, reject) {\n                      provider.enable().then(resolve)[\"catch\"](function () {\n                        return reject({\n                          message: 'This dapp needs access to your account information.'\n                        });\n                      });\n                    });\n                  },\n                  disconnect: function disconnect() {\n                    return provider.close();\n                  },\n                  address: {\n                    onChange: function onChange(func) {\n                      provider.send('eth_accounts').then(function (accounts) {\n                        return func(accounts[0]);\n                      });\n                      provider.on('accountsChanged', function (accounts) {\n                        return func(accounts[0]);\n                      });\n                    }\n                  },\n                  network: {\n                    onChange: function onChange(func) {\n                      provider.send('eth_chainId').then(func);\n                      provider.on('chainChanged', func);\n                    }\n                  },\n                  balance: {\n                    get: function get() {\n                      return new Promise(function (resolve) {\n                        if (!provider.wc._accounts[0]) {\n                          resolve(null);\n                          return;\n                        }\n                      });\n                    }\n                  }\n                }\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    },\n    desktop: true,\n    preferred: preferred\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (walletConnect);\n\n/***/ })\n\n}]);\n//# sourceMappingURL=wallet-connect-a9101a29-js-es2015.js.map","import { v as validateType } from './validation-9ad8443b.js';\nvar walletConnectIcon = \"\\n  <svg \\n    height=\\\"25\\\" \\n    viewBox=\\\"0 0 40 25\\\" \\n    width=\\\"40\\\" \\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n  >\\n  <path d=\\\"m8.19180572 4.83416816c6.52149658-6.38508884 17.09493158-6.38508884 23.61642788 0l.7848727.76845565c.3260748.31925442.3260748.83686816 0 1.15612272l-2.6848927 2.62873374c-.1630375.15962734-.4273733.15962734-.5904108 0l-1.0800779-1.05748639c-4.5495589-4.45439756-11.9258514-4.45439756-16.4754105 0l-1.1566741 1.13248068c-.1630376.15962721-.4273735.15962721-.5904108 0l-2.68489263-2.62873375c-.32607483-.31925456-.32607483-.83686829 0-1.15612272zm29.16903948 5.43649934 2.3895596 2.3395862c.3260732.319253.3260751.8368636.0000041 1.1561187l-10.7746894 10.5494845c-.3260726.3192568-.8547443.3192604-1.1808214.0000083-.0000013-.0000013-.0000029-.0000029-.0000042-.0000043l-7.6472191-7.4872762c-.0815187-.0798136-.2136867-.0798136-.2952053 0-.0000006.0000005-.000001.000001-.0000015.0000014l-7.6470562 7.4872708c-.3260715.3192576-.8547434.319263-1.1808215.0000116-.0000019-.0000018-.0000039-.0000037-.0000059-.0000058l-10.7749893-10.5496247c-.32607469-.3192544-.32607469-.8368682 0-1.1561226l2.38956395-2.3395823c.3260747-.31925446.85474652-.31925446 1.18082136 0l7.64733029 7.4873809c.0815188.0798136.2136866.0798136.2952054 0 .0000012-.0000012.0000023-.0000023.0000035-.0000032l7.6469471-7.4873777c.3260673-.31926181.8547392-.31927378 1.1808214-.0000267.0000046.0000045.0000091.000009.0000135.0000135l7.6473203 7.4873909c.0815186.0798135.2136866.0798135.2952053 0l7.6471967-7.4872433c.3260748-.31925458.8547465-.31925458 1.1808213 0z\\\" \\n        fill=\\\"#3b99fc\\\"/>\\n  </svg>\\n\";\n\nfunction walletConnect(options) {\n  validateType({\n    name: 'WalletConnect Options',\n    value: options,\n    type: 'object'\n  });\n  var infuraKey = options.infuraKey,\n      preferred = options.preferred;\n  validateType({\n    name: 'infuraKey',\n    value: infuraKey,\n    type: 'string'\n  });\n  validateType({\n    name: 'preferred',\n    value: preferred,\n    type: 'boolean',\n    optional: true\n  });\n  var provider;\n  return {\n    name: 'WalletConnect',\n    svg: walletConnectIcon,\n    wallet: function wallet() {\n      var _ref, WalletConnectProvider, _provider;\n\n      return regeneratorRuntime.async(function wallet$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return regeneratorRuntime.awrap(import('@walletconnect/web3-provider'));\n\n            case 2:\n              _ref = _context.sent;\n              WalletConnectProvider = _ref[\"default\"];\n              _provider = new WalletConnectProvider({\n                infuraId: infuraKey\n              });\n              _provider.autoRefreshOnNetworkChange = false;\n              return _context.abrupt(\"return\", {\n                provider: provider,\n                \"interface\": {\n                  name: 'WalletConnect',\n                  connect: function connect() {\n                    return new Promise(function (resolve, reject) {\n                      provider.enable().then(resolve)[\"catch\"](function () {\n                        return reject({\n                          message: 'This dapp needs access to your account information.'\n                        });\n                      });\n                    });\n                  },\n                  disconnect: function disconnect() {\n                    return provider.close();\n                  },\n                  address: {\n                    onChange: function onChange(func) {\n                      provider.send('eth_accounts').then(function (accounts) {\n                        return func(accounts[0]);\n                      });\n                      provider.on('accountsChanged', function (accounts) {\n                        return func(accounts[0]);\n                      });\n                    }\n                  },\n                  network: {\n                    onChange: function onChange(func) {\n                      provider.send('eth_chainId').then(func);\n                      provider.on('chainChanged', func);\n                    }\n                  },\n                  balance: {\n                    get: function get() {\n                      return new Promise(function (resolve) {\n                        if (!provider.wc._accounts[0]) {\n                          resolve(null);\n                          return;\n                        }\n                      });\n                    }\n                  }\n                }\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    },\n    desktop: true,\n    preferred: preferred\n  };\n}\n\nexport default walletConnect;"]}